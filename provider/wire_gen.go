// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package provider

import (
	"github.com/xh-polaris/openapi-charge/biz/adaptor"
	"github.com/xh-polaris/openapi-charge/biz/adaptor/controller"
	"github.com/xh-polaris/openapi-charge/biz/application/service"
	"github.com/xh-polaris/openapi-charge/biz/infrastructure/config"
	"github.com/xh-polaris/openapi-charge/biz/infrastructure/mapper/base"
	"github.com/xh-polaris/openapi-charge/biz/infrastructure/mapper/full"
	"github.com/xh-polaris/openapi-charge/biz/infrastructure/mapper/log"
	"github.com/xh-polaris/openapi-charge/biz/infrastructure/mapper/margin"
)

// Injectors from wire.go:

func NewProvider() (*adaptor.ChargeServer, error) {
	configConfig, err := config.NewConfig()
	if err != nil {
		return nil, err
	}
	mongoMapper := base.NewMongoMapper(configConfig)
	baseInterfaceService := &service.BaseInterfaceService{
		BaseInterfaceMongoMapper: mongoMapper,
	}
	fullMongoMapper := full.NewMongoMapper(configConfig)
	fullInterfaceService := &service.FullInterfaceService{
		FullInterfaceMongoMapper: fullMongoMapper,
		BaseInterfaceMongoMapper: mongoMapper,
	}
	gradientService := &service.GradientService{}
	marginMongoMapper := margin.NewMongoMapper(configConfig)
	marginService := &service.MarginService{
		MarginMongoMapper: marginMongoMapper,
	}
	interfaceController := &controller.InterfaceController{
		BaseInterfaceService: baseInterfaceService,
		FullInterfaceService: fullInterfaceService,
		GradientService:      gradientService,
		MarginService:        marginService,
	}
	logMongoMapper := log.NewMongoMapper(configConfig)
	logService := &service.LogService{
		MarginService:   marginService,
		LogMongoMapper:  logMongoMapper,
		FullMongoMapper: fullMongoMapper,
	}
	logController := &controller.LogController{
		LogService: logService,
	}
	chargeServer := &adaptor.ChargeServer{
		IInterfaceController: interfaceController,
		ILogController:       logController,
	}
	return chargeServer, nil
}
